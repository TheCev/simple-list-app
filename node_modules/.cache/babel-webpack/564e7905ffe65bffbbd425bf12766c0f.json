{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ListService = /*#__PURE__*/(() => {\n  class ListService {\n    constructor(http) {\n      this.http = http;\n      this.token = localStorage.getItem('token');\n      this.user = JSON.parse(localStorage.getItem('user'));\n      this.apiUrl = 'http://localhost:3000';\n      this.httpOptions = {\n        headers: {\n          'Authorization': 'Bearer ' + this.token\n        }\n      };\n    }\n\n    getList(listId) {\n      return this.http.get(`${this.apiUrl}/lists/${listId}`, this.httpOptions);\n    }\n\n    getTasks(listId) {\n      return this.http.get(`${this.apiUrl}/tasks/user/${this.user.userId}/list/${listId}`, this.httpOptions);\n    }\n\n    sendList(listTitle) {\n      const newList = {\n        'title': listTitle,\n        'userId': this.user.userId\n      };\n      return this.http.post(`${this.apiUrl}/lists/`, newList, this.httpOptions);\n    }\n\n    sendTask(listId, title) {\n      let tasksUrl = `${this.apiUrl}/tasks`;\n      const newTask = {\n        userId: this.user.userId,\n        listId,\n        title,\n        state: false\n      };\n      return this.http.post(tasksUrl, newTask, this.httpOptions);\n    }\n\n    getLists(userId) {\n      console.log(this.user);\n      return this.http.get(`${this.apiUrl}/lists/user/${userId}`, this.httpOptions);\n    }\n\n    deleteList(listId) {\n      return this.http.delete(`${this.apiUrl}/lists/${listId}`, this.httpOptions);\n    }\n\n    deleteTask(taskId) {\n      let taskUrl = `${this.apiUrl}/tasks/${taskId}`;\n      return this.http.delete(taskUrl, this.httpOptions);\n    }\n\n    changeState(listId, task) {\n      let tasksUrl = this.apiUrl + `/tasks/${task.id}/state`;\n      return this.http.put(tasksUrl, task, this.httpOptions);\n    }\n\n    checkUser() {\n      return this.http.get(`${this.apiUrl}/auth`, this.httpOptions);\n    }\n\n  }\n\n  ListService.ɵfac = function ListService_Factory(t) {\n    return new (t || ListService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ListService.ɵprov = i0.ɵɵdefineInjectable({\n    token: ListService,\n    factory: ListService.ɵfac,\n    providedIn: 'root'\n  });\n  return ListService;\n})();","map":null,"metadata":{},"sourceType":"module"}
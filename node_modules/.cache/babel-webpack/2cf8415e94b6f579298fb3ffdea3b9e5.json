{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/shared/services/list.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./add-tasks-button/add-tasks-button.component\";\nimport * as i5 from \"./progress-bar/progress-bar.component\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"../delete-button/delete-button.component\";\n\nfunction TasksComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"app-progress-bar\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.tasksDone.length + \"/\" + ctx_r0.tasks.length || 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"length\", ctx_r0.percentage);\n  }\n}\n\nfunction TasksComponent_mat_selection_list_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"mat-list-option\", 9);\n    i0.ɵɵlistener(\"click\", function TasksComponent_mat_selection_list_5_ng_container_2_Template_mat_list_option_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const task_r4 = ctx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.changeState(task_r4);\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"app-delete-button\", 10);\n    i0.ɵɵlistener(\"click\", function TasksComponent_mat_selection_list_5_ng_container_2_Template_app_delete_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const task_r4 = ctx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.deleteTask(task_r4.id);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"selected\", task_r4.state);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r4.title, \" \");\n  }\n}\n\nfunction TasksComponent_mat_selection_list_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-selection-list\", 5, 6);\n    i0.ɵɵtemplate(2, TasksComponent_mat_selection_list_5_ng_container_2_Template, 5, 2, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tasks);\n  }\n}\n\nexport let TasksComponent = /*#__PURE__*/(() => {\n  class TasksComponent {\n    constructor(route, listSvc) {\n      this.route = route;\n      this.listSvc = listSvc;\n      this.list = {\n        'title': \"\"\n      };\n      this.tasks = [];\n      this.percentage = 0;\n      this.tasksDone = [];\n    }\n\n    showTasks() {\n      this.listSvc.getTasks(this.listId).subscribe(tasks => {\n        this.tasks = tasks;\n        this.updatePercentage();\n      });\n    }\n\n    getList() {\n      this.listSvc.getList(this.listId).subscribe(list => {\n        this.list = list;\n      });\n    }\n\n    addNewTask(taskTitle) {\n      this.listSvc.sendTask(this.listId, taskTitle).subscribe(task => {\n        this.showTasks();\n        this.updatePercentage(); //this.showTasks()\n      });\n    }\n\n    changeState(task) {\n      /*switch (task.state) {\r\n          case true:\r\n              task.state = false\r\n              break;\r\n          \r\n          case false:\r\n              task.state = true\r\n              break;\r\n      }*/\n      this.listSvc.changeState(this.listId, task).subscribe(data => {\n        this.updatePercentage(); //this.showTasks()\n\n        console.log(task.state);\n      });\n    }\n\n    deleteTask(id) {\n      this.listSvc.deleteTask(id).subscribe(task => {\n        //const index = this.tasks.findIndex((task) => task.id === id)\n        //this.tasks.splice(index,1)\n        this.updatePercentage();\n        this.showTasks();\n      });\n    }\n\n    updatePercentage() {\n      this.tasksDone = this.tasks.filter(task => task.state === true);\n      this.percentage = this.tasksDone.length / this.tasks.length * 100;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.listId = params['listId'];\n        this.showTasks();\n        this.getList();\n      });\n    }\n\n  }\n\n  TasksComponent.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ListService));\n  };\n\n  TasksComponent.ɵcmp = i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    decls: 8,\n    vars: 4,\n    consts: [[1, \"container\"], [\"class\", \"container\", 4, \"ngIf\"], [\"color\", \"secondary\", 4, \"ngIf\"], [3, \"listId\", \"newTask\"], [3, \"length\"], [\"color\", \"secondary\"], [\"listTasks\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flexbox\"], [3, \"selected\", \"click\"], [3, \"click\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, TasksComponent_div_3_Template, 4, 2, \"div\", 1);\n        i0.ɵɵelementStart(4, \"div\", 0);\n        i0.ɵɵtemplate(5, TasksComponent_mat_selection_list_5_Template, 3, 1, \"mat-selection-list\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 0);\n        i0.ɵɵelementStart(7, \"app-add-tasks-button\", 3);\n        i0.ɵɵlistener(\"newTask\", function TasksComponent_Template_app_add_tasks_button_newTask_7_listener($event) {\n          return ctx.addNewTask($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.list.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tasks);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"listId\", ctx.listId);\n      }\n    },\n    directives: [i3.NgIf, i4.AddTasksButtonComponent, i5.ProgressBarComponent, i6.MatSelectionList, i3.NgForOf, i6.MatListOption, i7.DeleteButtonComponent],\n    styles: [\".container[_ngcontent-%COMP%]{width:90%;max-width:500px;margin:2rem auto}.flexbox[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;align-items:center}\"]\n  });\n  return TasksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}